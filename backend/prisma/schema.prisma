generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int       @id @default(autoincrement())
  name                    String
  full_name               String
  number                  String
  email                   String    @unique
  password                String
  role                    Role      @default(user)
  bank_account_number     String
  reclam                  Reclam[]
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  verificationCode        String?   @db.VarChar(255)
  verificationCodeExpires DateTime?
  isVerified              Boolean?  @default(false)
  resetToken              String?   @db.VarChar(100) @unique
  resetTokenExpiry        DateTime?
  img                     String?   // URL or path to the user's profile image

  region_id               Int?
  region                  Region?   @relation(fields: [region_id], references: [id])
}



model Reclam {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  status      Status
  priority    Priority
  date_debut  DateTime
  attachment  String?
  region      Region    @relation(fields: [region_id], references: [id])
  region_id   Int
  user        User      @relation(fields: [user_id], references: [id])
  user_id     Int
  currentAgency String? @db.VarChar(255)
  rejectionReason String? @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Region {
  id         Int      @id @default(autoincrement())
  name       String
  date_debut DateTime
  reclam     Reclam[]

  User User[]
}

model Banc {
  id        Int    @id @default(autoincrement())
  cin       String
  name      String
  full_name String

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}



enum Role {
  user
  admin
  agent
}

enum Status {
  pending
  in_progress
  resolved
  closed
  rejected
}

enum Priority {
  low
  medium
  high
}